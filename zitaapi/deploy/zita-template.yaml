AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: ZITA

Parameters:
  Environment:
    Type: String
    Default: "dev"
  SubEnv:
    Type: String
    Default: ""

Resources:
  
  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub zita-lambda-${Environment}${SubEnv}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - scheduler.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      Policies:
        - PolicyName: !Sub zita-lambda-${Environment}${SubEnv}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
              # - Effect: Allow
              #   Action:
              #     - "sqs:*Message"
              #     - "sqs:Get*"
              #     - "sqs:List*"
              #   Resource:
              #     - !GetAtt CognitoCustomAttributesQueue.Arn
                  
  HttpApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
        AllowOrigins:
          - "*"

  LambdaHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Role: !GetAtt LambdaRole.Arn
      Handler: main.auth_lambda_handler
      Runtime: python3.9
      MemorySize: 1024
      CodeUri: lambda/
      Events:
        HelloWorldApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApiGateway
            # Path: /{proxy+}
            Path: /hello
            Method: ANY

        # AthenaRequest:
        #   Type: HttpApi # More info about HttpAPI Event Source: https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#httpapi
        #   Properties:
        #     ApiId: !Ref HttpApiGateway
        #     Path: /{proxy+}
        #     Method: ANY

  # UserPool:
  #   Type: 'AWS::Cognito::UserPool'
  #   Properties:
  #     UserPoolName: 'MyUserPool'
  #     AutoVerifiedAttributes:
  #       - email

  # UserPoolClient:
  #   Type: 'AWS::Cognito::UserPoolClient'
  #   Properties:
  #     ClientName: 'MyUserPoolClient'
  #     UserPoolId: !Ref UserPool
  #     GenerateSecret: false

Outputs:
  LambdaHandlerFunctionArn:
    Value: !GetAtt LambdaHandlerFunction.Arn
  # UserPoolId:
  #   Value: !Ref UserPool
  # UserPoolClientId:
  #   Value: !Ref UserPoolClient
  # ApiGatewayInvokeURL:
  #   Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello


  